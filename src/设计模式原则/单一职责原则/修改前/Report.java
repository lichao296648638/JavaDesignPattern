package 设计模式原则.单一职责原则.修改前;
/**
 * Description：
 * 这是一个报告类，有生成、打印报告两种功能
 *
 * @author Ashes
 * @date 2023/12/26
 *
 * @单一职责是说：
 * 你应该保证引起该类变化的原因只有一个！
 * 你可以通过一个类只服务于一种功能做到以上特性。
 * 在java中一般通过拆分类的功能或者使用抽象类、接口的方式来达成这个目的。
 * 使用单一职责原则有利于维护和阅读！
 *
 * @该类问题：
 * @see #generateReport()
 * @see #printReport()
 * 此类把生成报告和打印报告的功能放到了同一类下，违反了单一职责原则！
 * 如果按照此类方式，当用户种类和播放方式增多时，此类会愈发臃肿难以维护！
 * 如继续添加分析报告、传送报告等功能
 *
 * @反思：
 * 如果你能确定类本身就是这种简单的功能，写多写少其实也无所谓，
 * 不要太在意书本知识，但这其实是一个高危操作！
 * 正常来说，你无法确定未来的功能会复杂到什么程度，尽量不要给自己挖坑！
 */
public class Report {

    /**
     * 生成报告
     */
    public void generateReport() {
        System.out.println("生成报告");
    }

    /**
     * 打印报告
     */
    public void printReport() {
        System.out.println("打印报告");
    }
}
