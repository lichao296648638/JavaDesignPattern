package 设计模式原则.接口隔离原则.修改前;

/**
 * Description: 包含很多功能的工人接口
 *
 * @author Ashes
 * @date 2024/1/2 0:02
 *
 * @接口隔离原则是说：
 * 不要强迫一个类去实现它不需要的功能！接口应当尽量小而专，而不是大而全。
 *
 * @该接口问题：
 * 有一个类实现了该接口
 * @see Programmer
 * 但是你会发现该类中的work()方法并没有具体的实现，这说明Programmer类并不
 * 需要work()功能。如果继续在该接口中添加新功能如sleep()，那么势必要修改
 * 所有实现了该接口的类，这样会增加接口和类的耦合性。 如果一个接口过于庞大，
 * 说明它同时担任了很多职责，这有可能会违反单一职责原则，不利于接口的稳定。
 *
 * @我们应当:
 * 1.接口的设计粒度尽量细化，尽量实现同类的、较少的功能
 * 2.尽量只去根据需求设计客户端需要的接口
 */
public interface Worker {
    void eat();
    void work();
}
